# -*- coding: utf-8 -*-
"""202210688 안혁진 계산물리 과제2 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aVeuHiCsFRduIdIQYD3B6apqxs2oJJ_C

**방법 1 : uniform**
"""

import random as rd
N = 100000
gi_1 = []
result1 = 0
def g(x):
  return 3*x**2
for i in range(10):
  sum = 0
  for i in range(N):
    sum += g(rd.random())
  result1 += sum/N
  gi_1.append(sum/N)
avg_g1 = result1 / 10
print("uniform 방법 평균",avg_g1)
sum_k = 0
for i in range(10):
  k = (gi_1[i] - avg_g1)**2
  sum_k +=  k

var1 = sum_k/9
print("uniform 방법 분산",var1)
print(gi_1)

import numpy as np

N = 100000
num_iterations = 10

def g(x):
    return 3 * x**2

random_numbers = np.random.random((num_iterations, N))
gi_values = np.mean(g(random_numbers), axis=1)
avg_g1 = np.mean(gi_values)
var_g1 = np.var(gi_values)

print("uniform 방법 평균", avg_g1)
print("uniform 방법 분산", var_g1)
print(gi_values)

"""**방법 2 : beta(a,b) **"""

import math
import numpy as np
a = 2
b = 2
gi_2 = []
result2 = 0
def f(x):
  return (math.gamma(a+b)* x**(a-1) * (1-x)**(b-1))/(math.gamma(a)*math.gamma(b))

for i in range(10):
  sum = 0
  for i in range(N):
    random_number = np.random.beta(a,b)
    sum += g(random_number) / f(random_number)
  result2 += sum / N
  gi_2.append(sum/N)

avg_g2 = result2/10
print("beta(a,b) 방법 평균",avg_g2)
sum_k = 0
for i in range(10):
  k = (gi_2[i] - avg_g2)**2
  sum_k +=  k
var2 = sum_k/9
print("beta(a,b) 방법 분산",var2)

print(gi_2)

import numpy as np
from scipy.stats import beta

a = 2
b = 2
N = 100000
num_iterations = 10

def f(x):
    return beta.pdf(x, a, b)

random_numbers = np.random.beta(a, b, (num_iterations, N))
gi_values = np.mean(g(random_numbers) / f(random_numbers), axis=1)
avg_g2 = np.mean(gi_values)
var_g2 = np.var(gi_values)

print("beta(a,b) 방법 평균", avg_g2)
print("beta(a,b) 방법 분산", var_g2)
print(gi_values)

"""**방법 3 : f(y) = 2*y**"""

gi_3 = []
result3 = 0
def fy(x):
  return 2*x
for i in range(10):
  sum = 0
  for i in range(N):
    x = rd.uniform(0,1)
    y_1 = math.sqrt(x)
    sum += g(y_1)/fy(y_1)
  result3 += sum/N
  gi_3.append(sum/N)
sum/N

avg_g3 = result3/10
print("f(y) = 2*y 방법 평균",avg_g3)
sum_k = 0
for i in range(10):
  k = (gi_3[i] - avg_g3)**2
  sum_k +=  k
var3 = sum_k/9
print("f(y) = 2*y 방법 분산",var3)

import numpy as np

N = 100000
num_iterations = 10

def fy(x):
    return 2 * x

def g(y):
    return 3 * y**2

random_numbers = np.random.uniform(0, 1, (num_iterations, N))
y_values = np.sqrt(random_numbers)
gi_values = np.mean(g(y_values) / fy(y_values), axis=1)
avg_g3 = np.mean(gi_values)
var_g3 = np.var(gi_values)

print("f(y) = 2*y 방법 평균", avg_g3)
print("f(y) = 2*y 방법 분산", var_g3)
print(gi_values)

print("""방법 1 평균 : {} , 방법 2 평균 : {} , 방법 3 평균 : {}
방법 1 분산 : {} , 방법 2 분산 : {} , 방법 3 분산 : {}""".format(avg_g1,avg_g2,avg_g3,var1,var2,var3))

